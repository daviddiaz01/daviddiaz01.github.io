{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Page","text":""},{"location":"#david-diaz-egr-314","title":"David Diaz \u2013 EGR 314","text":""},{"location":"#about-the-project","title":"About the Project","text":"<p>This project focuses on developing a line-following robot, an autonomous system that uses sensors to detect and follow a path. The robot integrates multiple subsystems, each responsible for specific functions such as sensor detection, motor control, power regulation, and communication.  </p> <p>As part of this team project, I am responsible for the Sensor Subsystem, which plays a crucial role in detecting the path and guiding the robot\u2019s movement. The ESP32-S3 microcontroller processes sensor data, while the color sensor detects line contrast to enable precise navigation.  </p>"},{"location":"#key-objectives","title":"Key Objectives","text":"<ul> <li>Autonomous Navigation \u2013 Enable the robot to follow a designated path using real-time sensor input.  </li> <li>Efficient Data Processing \u2013 Use the ESP32-S3 to analyze sensor readings and send commands.  </li> <li>Stable Power Management \u2013 Ensure reliable voltage conversion and power supply for all components.  </li> </ul>"},{"location":"#project-subsystems","title":"Project Subsystems","text":"Subsystem Function Sensor Subsystem Detects line contrast and sends data to MCU Motor Control Controls wheel movement based on sensor input Power Management Regulates voltage for stable operation Communication Interfaces with external controllers for debugging"},{"location":"#development-process","title":"Development Process","text":"<ol> <li>Component Selection \u2013 Research and select the best components for performance and efficiency.  </li> <li>Circuit Design &amp; PCB Layout \u2013 Design and integrate components into a functional circuit.  </li> <li>Firmware Development \u2013 Implement software for sensor communication and data processing.  </li> <li>Testing &amp; Optimization \u2013 Ensure the system operates accurately under different conditions.  </li> </ol>"},{"location":"Block_Diagram/","title":"Block Diagram","text":""},{"location":"Block_Diagram/#block-diagram","title":"Block Diagram","text":""},{"location":"Component_Selection/","title":"Component Selection for Sensor Subsystem","text":""},{"location":"Component_Selection/#david-diaz","title":"David Diaz","text":""},{"location":"Component_Selection/#egr-314-sensor-subsystem","title":"EGR 314 - Sensor Subsystem","text":""},{"location":"Component_Selection/#introduction","title":"Introduction","text":"<p>The sensor subsystem of the line-following robot detects and interprets the path, allowing precise navigation. It includes a color sensor to read contrast and an ESP32-S3 microcontroller to process data and control movement.</p> <p>This document outlines the selection of key components based on performance, compatibility, and integration, ensuring efficient operation and seamless communication within the system.</p>"},{"location":"Component_Selection/#project-components-overview","title":"Project Components Overview","text":"Microcontroller Voltage Regulator Switch USB-to-Serial Adapter Color Sensor USB Connector Barrel Jack Capacitor"},{"location":"Component_Selection/#major-components","title":"Major Components","text":"Component Type Component Name Function in the System Color Sensor OPT4060 RGBW Detects line contrast and sends data via I2C Microcontroller ESP32-S3-WROOM-1-N4 Processes sensor data, controls robot functions Voltage Regulator ADPL44002-3.3 Steps down 12V to 3.3V to power ESP32 and sensor Power Supply 12V AC-DC Adapter Provides power to the voltage regulator USB-to-Serial Adapter HiLetgo CP2102 Required for programming ESP32-S3 via USB Push Button (RESET) Omron B3U Series (SMT) Connects EN (RESET) to GND to restart ESP32 Push Button (BOOT Mode) Omron B3U Series (SMT) Connects GPIO0 to GND to enter boot mode Switch (Enable ON/OFF) Omron B3U Series (SMT) Controls the EN pin to turn the regulator ON/OFF Input Capacitor (CIN) 2.2\u00b5F (Ceramic, SMD 0805) Filters noise and stabilizes VIN for regulator Output Capacitor (COUT) 2.2\u00b5F (Ceramic, SMD 0805) Stabilizes VOUT (3.3V output)for regulator Soft-Start Capacitor (CSS) 1nF (Ceramic, SMD 0805) Controls soft-start delay to prevent inrush current for regulator"},{"location":"Component_Selection/#component-comparison-justification","title":"Component Comparison &amp; Justification","text":"Component Type Option Pros Cons Microcontroller ESP32-S3-WROOM-1-N4 (Chosen) Powerful dual-core, WiFi &amp; Bluetooth, SMD, multiple GPIO &amp; I2C Requires external USB-UART adapter for flashing ESP8266 Cheaper, WiFi-enabled, good for basic IoT Less RAM, fewer peripherals, no Bluetooth STM32F411CEU6 Powerful ARM Cortex-M4, many peripherals No built-in WiFi/Bluetooth, requires external wireless module Color Sensor OPT4060 RGBW (Chosen) High-accuracy RGBW detection, I2C interface, compact SMD package More expensive than basic color sensors TCS34725 RGB Sensor Low cost, built-in IR blocking filter Lower accuracy, larger footprint AS7341 Spectral Sensor High precision with spectral channels More complex to interface, higher power consumption Voltage Regulator ADPL44002-3.3 (Chosen) High efficiency, compact, low noise Requires external capacitors for stability AMS1117-3.3 LDO Simple, low cost, easy to use Less efficient (linear regulator), dissipates more heat MP2315 Switching Regulator Higher efficiency, adjustable voltage output Requires more external components, more complex circuit design"},{"location":"Component_Selection/#justification-of-component-choices","title":"Justification of Component Choices","text":"<p>Each of the above components was selected based on key factors such as electrical compatibility, ease of PCB integration, and availability.</p>"},{"location":"Component_Selection/#1-color-sensor-opt4060-rgbw","title":"1. Color Sensor - OPT4060 RGBW","text":"<ul> <li>Provides accurate RGBW color detection.</li> <li>Uses I2C communication, simplifying data transfer.</li> <li> <p>Compact and reliable for high-speed line tracking.</p> </li> <li> <p>Product Link: OPT4060 RGBW - DigiKey</p> </li> <li>Datasheet: OPT4060 RGBW Datasheet</li> </ul> <p></p>"},{"location":"Component_Selection/#2-microcontroller-esp32-s3-wroom-1-n4","title":"2. Microcontroller - ESP32-S3-WROOM-1-N4","text":"<ul> <li>High-performance microcontroller with WiFi and Bluetooth capabilities.</li> <li>Supports multiple I2C and UART peripherals for sensor communication.</li> <li> <p>Surface-mount package ensures compact PCB design.</p> </li> <li> <p>Product Link: ESP32-S3-WROOM-1-N4 - DigiKey</p> </li> <li>Datasheet: ESP32-S3-WROOM-1-N4 Datasheet</li> </ul> <p></p>"},{"location":"Component_Selection/#3-voltage-regulator-adpl44002-33","title":"3. Voltage Regulator - ADPL44002-3.3","text":"<ul> <li>Steps down 12V to 3.3V efficiently.</li> <li>Low noise and high power stability.</li> <li> <p>Requires minimal external components for integration.</p> </li> <li> <p>Product Link: ADPL44002-3.3 - DigiKey</p> </li> <li>Datasheet: ADPL44002-3.3 Datasheet</li> </ul> <p></p>"},{"location":"Component_Selection/#4-power-supply-12v-ac-dc-adapter","title":"4. Power Supply - 12V AC-DC Adapter","text":"<ul> <li>Provides a stable 12V power source.</li> <li> <p>Compatible with voltage regulator and ESP32 power requirements.</p> </li> <li> <p>Product Link: Tri-Mag L6R06H-120 - DigiKey</p> </li> <li>Datasheet: Tri-Mag L6R06H-120 Datasheet</li> </ul> <p></p>"},{"location":"Component_Selection/#5-usb-to-serial-adapter-hiletgo-cp2102","title":"5. USB-to-Serial Adapter - HiLetgo CP2102","text":"<ul> <li>Required for flashing firmware to the ESP32-S3.</li> <li> <p>Provides stable USB-to-UART communication.</p> </li> <li> <p>Product Link: HiLetgo CP2102 - Amazon</p> </li> </ul> <p></p>"},{"location":"Component_Selection/#6-surface-mount-push-buttons-omron-b3u-series","title":"6. Surface-Mount Push Buttons - Omron B3U Series","text":"<ul> <li>Used for RESET and BOOT mode selection.</li> <li>Compact and easy to integrate into the PCB.</li> <li> <p>Provides long operational life.</p> </li> <li> <p>Product Link: Omron B3U-1000P - Mouser</p> </li> <li>Datasheet: Omron B3U-1000P Datasheet</li> </ul> <p></p>"},{"location":"Component_Selection/#7-capacitors-cin-cout-css-for-regulator","title":"7. Capacitors (CIN, COUT, CSS) for regulator","text":"<ul> <li>CIN (2.2\u00b5F, Ceramic, SMD 0805) - Stabilizes input voltage.</li> <li> <p>COUT (2.2\u00b5F, Ceramic, SMD 0805) - Ensures stable 3.3V output.</p> </li> <li> <p>Product Link: KEMET C0805C225K8PACTU - DigiKey</p> </li> <li> <p>Datasheet: KEMET C0805C225K8PACTU Datasheet</p> </li> <li> <p>CSS (1nF, Ceramic, SMD 0805) - Soft-start functionality.</p> </li> <li> <p>Product Link: KEMET C0805C102J5GAC7800 - DigiKey</p> </li> <li>Datasheet: KEMET C0805C102J5GAC7800 Datasheet</li> </ul> <p></p>"},{"location":"Component_Selection/#esp32-s3-wroom-1-n4-component-specifications","title":"ESP32-S3-WROOM-1-N4 Component Specifications","text":"ESP Info Answer Model ESP32-S3-WROOM-1-N4 Product Page URL Espressif Product Page ESP32-S3-WROOM-1-N4 Datasheet URL Datasheet ESP32 S3 Datasheet URL ESP32-S3 Datasheet ESP32 S3 Technical Reference Manual URL Technical Manual Vendor link DigiKey Code Examples GitHub Libraries External Resources URL(s) Google Search Unit cost $3.80 (DigiKey) Absolute Maximum Current for entire IC 500 mA Supply Voltage Range Min: 3.0V / Nominal: 3.3V / Max: 3.6V Maximum GPIO current (per pin) 40 mA Supports External Interrupts? Yes Required Programming Hardware, Cost, URL CP2102 USB to UART ($6)"},{"location":"Component_Selection/#peripheral-availability","title":"Peripheral Availability","text":"Module # Available Needed Associated Pins (or * for any) UART 3 1 TXD0, RXD0 external SPI* 2 1 GPIO11, GPIO12, GPIO13, GPIO14 I2C 2 1 GPIO8 (SDA), GPIO9 (SCL) GPIO 36 4 * ADC 20 2 GPIO1, GPIO2 LED PWM 8 2 * Motor PWM 2 1 * USB Programmer 1 1 USB_D+, USB_D-"},{"location":"Component_Selection/#esp32-s3-wroom-1-n4-pinout-diagram","title":"ESP32-S3-WROOM-1-N4 Pinout Diagram","text":""},{"location":"Component_Selection/#conclusion","title":"Conclusion","text":"<p>This component selection ensures the sensor subsystem works reliably with the ESP32-S3, enabling precise color detection and stable power management. Each component was chosen for optimal performance, seamless integration, and efficient operation within the line-following robot.</p>"},{"location":"Schematic/","title":"Individual Sensor Subsystem Schematic","text":""},{"location":"Schematic/#schematic-diagram","title":"Schematic Diagram","text":""},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}